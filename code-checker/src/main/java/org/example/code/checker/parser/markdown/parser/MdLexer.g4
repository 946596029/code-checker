lexer grammar MdLexer;

@header { package org.example.code.checker.parser.markdown.parser; }

// Header and structural tokens generated by preprocessor
HEADER      : '<' 'header' ':' DIGITS '>' ;
INDENT      : '<' ('INDENT'|'indent') ':' DIGITS '>' ;
TAB         : '<' ('TAB'|'tab') '>' ;
BLANK       : '<' 'blank' (':' DIGITS)? '>' ;
SPACE_TOK   : '<' 'space' '>' ;

// Punctuation and symbols used in lists or text
DASH        : '-' ;
STAR        : '*' ;
PLUS        : '+' ;

// Newline handling
NEWLINE     : '\r'? '\n' ;

// Text content for the rest of a line (prefer structural tokens first)
TEXT        : ~[\r\n]+ ;

// Fragments
fragment DIGITS : [0-9]+ ;

// Ignore nothing globally; structural whitespace is meaningful in Markdown

